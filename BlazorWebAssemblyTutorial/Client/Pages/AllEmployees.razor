@page "/all"

<div style="width:1100px">
    <SfGrid @ref="employeeGrid" DataSource="@Employees" AllowGrouping="true" AllowPaging="true" AllowSorting="true" AllowFiltering="true">
        <GridPageSettings PageSize="5" PageSizes="@pageDropdown" PageCount="3"></GridPageSettings>
        <GridSortSettings AllowUnsort="false">
            <GridSortColumns>
                <GridSortColumn Field="EmployeeId"></GridSortColumn>
            </GridSortColumns>
        </GridSortSettings>
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu" Mode="FilterBarMode.Immediate" ImmediateModeDelay="200"></GridFilterSettings>
        <GridGroupSettings ShowGroupedColumn="true"></GridGroupSettings>
        <GridColumns>
            <GridColumn Field=@nameof(Employee.EmployeeId) HeaderText="ID" FilterSettings="@(new FilterSettings() { Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })">
                <FilterItemTemplate>
                    @{ 
                        var filterContext = ( context as FilterItemTemplateContext);
                        var filterValue = filterContext.Value;
                        if (Convert.ToInt32(filterValue) <=9)
                        {
                            filterValue = "0" + filterValue;
                        }
                        @filterValue
                    }
                </FilterItemTemplate>
            </GridColumn>
            <GridColumn Field=@nameof(Employee.FirstName) HeaderText="First Name"></GridColumn>
            <GridColumn Field=@nameof(Employee.LastName) HeaderText="Last Name" FilterSettings="@(new FilterSettings() { Type = Syncfusion.Blazor.Grids.FilterType.Excel })"></GridColumn>
            <GridColumn Format="d" Field=@nameof(Employee.DateOfBirth) HeaderText="Date of Birth"></GridColumn>
            <GridColumn Field=@nameof(Employee.Gender) HeaderText="Gender">
                <FilterTemplate>
                    <SfDropDownList Placeholder="All" DataSource="genderDropDownSource" TItem="DropDownListItem" TValue="string">
                        <DropDownListFieldSettings Value="Value" Text="Text"></DropDownListFieldSettings>
                        <DropDownListEvents TItem="DropDownListItem" TValue="string" ValueChange="@GenderSelectionChange"></DropDownListEvents>
                    </SfDropDownList>
                </FilterTemplate>
            </GridColumn>
            <GridColumn AllowGrouping="false" AllowFiltering="false" Field=@nameof(Employee.Email) HeaderText="Email"></GridColumn>
        </GridColumns>
    </SfGrid>
</div> 

@code {

    public string[] pageDropdown = new string[] { "All", "5", "10", "15", "20" };

    public List<Employee> Employees { get; set; }

    public SfGrid<Employee> employeeGrid { get; set; }

    protected void GenderSelectionChange(ChangeEventArgs<string, DropDownListItem> args)
    {
        if (args.Value == "All")
        {
            employeeGrid.ClearFiltering("Gender");
        }
        else
        {
            employeeGrid.FilterByColumn("Gender", "equal", args.Value);
        }
    }

    List<DropDownListItem> genderDropDownSource = EnumHelper.ConvertEnumToDropDownSource<Gender>("All","All");

    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }

}
